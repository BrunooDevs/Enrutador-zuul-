#el archivo bootstrap.properties es para configurar todo lo relaciona con spring config

#cuando arranca el cliente primero antes que nada se conecta al servidor de configuraciones y le ba a pedir
#va ir a buscar todas sus configuraciones del repository git y una vez que la tenga hya recien se va a registrar
#en el servidor eureka.

#NOTA: SI TENEMOS DOS ARCHIVOS application.properties y otro bootstrap.properties el primero que se ejecuta es
#el bootstrap.properties ya que corre en el proceso de arranque de spring boot y despues el application properties
#por lo tanto toda la configuracion que tengamos en bootstrap.properties despues no se puede sobreescribir
# en el aplication properties, basicamente en bootstrap.properties configuramos lo relacionado a 
#con spring cloud config y los ambientes 


# spring.cloud.config.uri: aqui ponemos la ruta del servidor de configuracion que es la de servicio-config-server
#NOTA: SIEMPRE LA CONFIGURACIN DEL profiles sobreescribe a la configuracion del default, si no tuviera 
#spring.profiles.active=prod se ejecutaria la configuracion del servidor servicio-item.properties


spring.application.name=servicio-zuul-server
#http://config-server:8888 seria nuestro nombre de nuestro contenedor en docker , pero si estamos en producion es localhost
spring.cloud.config.uri=http://config-server:8888


#habilitamos el endpoint en actuator, poder habilitar en endpoint refres que nos permite actualizar todos los
#componentes anotados con @refreshscope (la anotamos en el ItemController)
#management.endpoints.web.exposure.include=* separado por comas podemos incluir los endpoints o poner un *
#para agregar todos enpoints de srping boot actuator

# cuando el servidor este arrancado y modificamos alguna cosa de nuestro repositorio de configuracion normamente
#no veriamos cambios , sin embargo utilizando esta configuracion podremos mostrar los cambios de la configuracion
#sin tener que reiniciar el proyecto para acerlo debemos acceder al endpoint localhost:8005/actuator/refresh
management.endpoints.web.exposure.include=*















